import { initAlert } from './alert/ts/alert';
import { initGallery, cleanupGallery } from './gallery/ts/gallery';
import { initCollapse } from './collapse/ts/collapse';
import { Collapse } from './collapse/ts/collapse-programmatic';
import type { CollapseConfig, ICollapse } from './collapse/ts/collapse.types';
import { initDropdowns, cleanupDropdowns } from './dropdown/ts/dropdown';
import { Dropdown } from './dropdown/ts/dropdown-programmatic';
import type { DropdownConfig, IDropdown } from './dropdown/ts/dropdown.types';
import { initPopovers, cleanupPopovers } from './popover/ts/popover';
import { Popover } from './popover/ts/popover-programmatic';
import type { PopoverConfig, IPopover } from './popover/ts/popover.types';
import { initTooltips, cleanupTooltips } from './tooltip/ts/tooltip';
import { Tooltip } from './tooltip/ts/tooltip-programmatic';
import type { TooltipConfig, ITooltip } from './tooltip/ts/tooltip.types';
import { initTabs, cleanupTabs } from './tabs/ts/tabs';
import { Tabs } from './tabs/ts/tabs-programmatic';
import type { TabsConfig, ITabs } from './tabs/ts/tabs.types';
import { initModal, cleanupModals } from './modal/ts/modal';
import { Modal } from './modal/ts/modal-programmatic';
import type { ModalConfig, IModal } from './modal/ts/modal.types';
import { initAccordion, cleanupAccordions, toggleAccordionById } from './accordion/ts/accordion';
import { Accordion } from './accordion/ts/accordion-programmatic';
import type { AccordionConfig, IAccordion } from './accordion/ts/accordion.types';
import { initStepper, cleanupSteppers } from './stepper/ts/stepper';
import { Stepper } from './stepper/ts/stepper-programmatic';
import type { StepperConfig, IStepper } from './stepper/ts/stepper.types';
export { initAlert, initCollapse, Collapse, initDropdowns, cleanupDropdowns, Dropdown, initPopovers, cleanupPopovers, Popover, initTooltips, cleanupTooltips, Tooltip, initTabs, cleanupTabs, Tabs, initModal, cleanupModals, Modal, initAccordion, cleanupAccordions, Accordion, toggleAccordionById, initStepper, cleanupSteppers, Stepper, initGallery, cleanupGallery, };
export type { ModalConfig, IModal, DropdownConfig, IDropdown, CollapseConfig, ICollapse, PopoverConfig, IPopover, TabsConfig, ITabs, TooltipConfig, ITooltip, AccordionConfig, IAccordion, StepperConfig, IStepper };
export declare const MaterialTailwind: {
    initAlert: typeof initAlert;
    initCollapse: typeof initCollapse;
    initDropdowns: typeof initDropdowns;
    cleanupDropdowns: typeof cleanupDropdowns;
    initPopovers: typeof initPopovers;
    cleanupPopovers: typeof cleanupPopovers;
    initTooltips: typeof initTooltips;
    cleanupTooltips: typeof cleanupTooltips;
    initTabs: typeof initTabs;
    cleanupTabs: typeof cleanupTabs;
    initModal: typeof initModal;
    cleanupModals: typeof cleanupModals;
    initAccordion: typeof initAccordion;
    cleanupAccordions: typeof cleanupAccordions;
    toggleAccordionById: typeof toggleAccordionById;
    initStepper: typeof initStepper;
    cleanupSteppers: typeof cleanupSteppers;
    initGallery: typeof initGallery;
    cleanupGallery: typeof cleanupGallery;
};
export declare function initMaterialTailwind(): void;
declare const _default: {
    initMaterialTailwind: typeof initMaterialTailwind;
    initAlert: typeof initAlert;
    initCollapse: typeof initCollapse;
    initDropdowns: typeof initDropdowns;
    cleanupDropdowns: typeof cleanupDropdowns;
    initPopovers: typeof initPopovers;
    cleanupPopovers: typeof cleanupPopovers;
    initTooltips: typeof initTooltips;
    cleanupTooltips: typeof cleanupTooltips;
    initTabs: typeof initTabs;
    cleanupTabs: typeof cleanupTabs;
    initModal: typeof initModal;
    cleanupModals: typeof cleanupModals;
    initAccordion: typeof initAccordion;
    cleanupAccordions: typeof cleanupAccordions;
    toggleAccordionById: typeof toggleAccordionById;
    initStepper: typeof initStepper;
    cleanupSteppers: typeof cleanupSteppers;
    initGallery: typeof initGallery;
    cleanupGallery: typeof cleanupGallery;
};
export default _default;
